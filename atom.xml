<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>accord</title>
  <subtitle>web前端</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.taoyage.net/"/>
  <updated>2016-09-30T07:19:39.000Z</updated>
  <id>http://www.taoyage.net/</id>
  
  <author>
    <name>accord</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NeDB中文文档</title>
    <link href="http://www.taoyage.net/2016/09/29/NEDB%E8%AF%AD%E6%B3%95%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://www.taoyage.net/2016/09/29/NEDB语法以及使用教程/</id>
    <published>2016-09-29T14:41:15.000Z</published>
    <updated>2016-09-30T07:19:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NeDB简介"><a href="#NeDB简介" class="headerlink" title="NeDB简介"></a>NeDB简介</h2><p>NeDB是一款用于Node.js开发的NoSQL嵌入式内存数据库,完全采用javascript开发,可以使用在html5桌面应用程序,以及浏览器端应用,其api是MongoDB的一个子集,具有简单,轻量,速度快等特点.</p>
<h2 id="安装NeDB"><a href="#安装NeDB" class="headerlink" title="安装NeDB"></a>安装NeDB</h2><p>NeDB可以通过npm和bower来进行安装</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ npm <span class="keyword">install</span> nedb <span class="comment">--save</span></div><div class="line"></div><div class="line">$ bower <span class="keyword">install</span> nedb <span class="comment">--save</span></div></pre></td></tr></table></figure>
<h2 id="NeDB-API"><a href="#NeDB-API" class="headerlink" title="NeDB API"></a>NeDB API</h2><h3 id="创建-加载一个数据库"><a href="#创建-加载一个数据库" class="headerlink" title="创建/加载一个数据库"></a>创建/加载一个数据库</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 类型 1: 创建一个内存数据库 (不需要去加载数据库)</span></div><div class="line"><span class="keyword">var</span> Datastore = <span class="built_in">require</span>(<span class="string">'nedb'</span>)</div><div class="line"><span class="keyword">var</span> db = <span class="keyword">new</span> Datastore();</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 类型 2: 本地存储数据库,需要手动去加载数据库</span></div><div class="line"><span class="keyword">var</span> Datastore = <span class="built_in">require</span>(<span class="string">'nedb'</span>)</div><div class="line"><span class="keyword">var</span> db = <span class="keyword">new</span> Datastore(&#123; <span class="attr">filename</span>: <span class="string">'path/to/datafile'</span> &#125;);</div><div class="line"></div><div class="line">db.loadDatabase(); <span class="comment">//数据库可以直接加载或者用下面这种回调的方式</span></div><div class="line">db.loadDatabase(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123; </div><div class="line">	</div><div class="line">&#125;);</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 类型 3: 本地存储数据,自动加载数据库</span></div><div class="line"><span class="keyword">var</span> Datastore = <span class="built_in">require</span>(<span class="string">'nedb'</span>)</div><div class="line">  , db = <span class="keyword">new</span> Datastore(&#123; <span class="attr">filename</span>: <span class="string">'path/to/datafile'</span>, <span class="attr">autoload</span>: <span class="literal">true</span> &#125;);</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 类型 4: 本地存储数据用于html5和javascript来制作的桌面应用程序去调用'nwtest'</span></div><div class="line"><span class="comment">// 举例,在linux上, data文件在 ~/.config/nwtest/nedb-data/something.db</span></div><div class="line"><span class="keyword">var</span> Datastore = <span class="built_in">require</span>(<span class="string">'nedb'</span>)</div><div class="line">  , path = <span class="built_in">require</span>(<span class="string">'path'</span>)</div><div class="line">  , db = <span class="keyword">new</span> Datastore(&#123; <span class="attr">filename</span>: path.join(<span class="built_in">require</span>(<span class="string">'nw.gui'</span>).App.dataPath, <span class="string">'something.db'</span>) &#125;);</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 类型 5: 创建多个数据库</span></div><div class="line">db = &#123;&#125;;</div><div class="line">db.users = <span class="keyword">new</span> Datastore(<span class="string">'path/to/users.db'</span>);</div><div class="line">db.robots = <span class="keyword">new</span> Datastore(<span class="string">'path/to/robots.db'</span>);</div><div class="line"></div><div class="line"><span class="comment">// 如果不配置autoload,这里需要手动加载数据库(该方法是异步的)</span></div><div class="line">db.users.loadDatabase();</div><div class="line">db.robots.loadDatabase();</div></pre></td></tr></table></figure>
<h3 id="插入数据-db-inster-doc-callback"><a href="#插入数据-db-inster-doc-callback" class="headerlink" title="插入数据(db.inster(doc,callback))"></a>插入数据(db.inster(doc,callback))</h3><p>数据类型可以是String,Number,Boolean,Date,null,也可以使用数组和对象来进行存储.如果字段是undefined,将不会进行存储(这一点和MongoDB有点不同,MongoDB会吧undefined自动转换成null来进行存储).</p>
<p>如果文档中没有id字段,NeDB将自动生成一个16位字符的字符串存储到数据库,无法修改.</p>
<p>字段名不能以’$’开头或包含’.’</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> doc = &#123; </div><div class="line">	<span class="attr">hello</span>: <span class="string">'world'</span>,</div><div class="line">	<span class="attr">n</span>: <span class="number">5</span>, </div><div class="line">	<span class="attr">today</span>: <span class="keyword">new</span> <span class="built_in">Date</span>(),</div><div class="line">	<span class="attr">nedbIsAwesome</span>: <span class="literal">true</span>,</div><div class="line">	<span class="attr">notthere</span>: <span class="literal">null</span>,</div><div class="line">	<span class="attr">notToBeSaved</span>: <span class="literal">undefined</span>,  <span class="comment">//undefined值将不会进行存储</span></div><div class="line">	fruits: [ <span class="string">'apple'</span>, <span class="string">'orange'</span>, <span class="string">'pear'</span> ],</div><div class="line">	<span class="attr">infos</span>: &#123; <span class="attr">name</span>: <span class="string">'nedb'</span> &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">db.insert(doc, <span class="function"><span class="keyword">function</span> (<span class="params">err, newDoc</span>) </span>&#123;  </div><div class="line">	<span class="comment">// Callback</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//callback函数可有可无也可以写成下面这种形式</span></div><div class="line"></div><div class="line">db.insert(doc)</div></pre></td></tr></table></figure>
<h3 id="插入多个数组"><a href="#插入多个数组" class="headerlink" title="插入多个数组"></a>插入多个数组</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">db.insert([<span class="comment">&#123; a: 5 &#125;</span>, <span class="comment">&#123; a: 42 &#125;</span>], <span class="function"><span class="keyword">function</span> <span class="params">(err, newDocs)</span> <span class="comment">&#123;</span></span></div><div class="line"> 	</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 以下的例子,两个a字段的值相同将会报错</span></div><div class="line">db.insert([<span class="comment">&#123; a: 5 &#125;</span>, <span class="comment">&#123; a: 42 &#125;</span>, <span class="comment">&#123; a: 5 &#125;</span>], <span class="function"><span class="keyword">function</span> <span class="params">(err)</span> <span class="comment">&#123;</span></span></div><div class="line"></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>这里拟定了一个数据库,下面所介绍的内容,都会以这个数据库进行操作,举例</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123; <span class="string">_id:</span> <span class="string">'id1'</span>, <span class="string">planet:</span> <span class="string">'Mars'</span>, <span class="string">system:</span> <span class="string">'solar'</span>, <span class="string">inhabited:</span> <span class="literal">false</span>, <span class="string">satellites:</span> [<span class="string">'Phobos'</span>, <span class="string">'Deimos'</span>] &#125;</div><div class="line">&#123; <span class="string">_id:</span> <span class="string">'id2'</span>, <span class="string">planet:</span> <span class="string">'Earth'</span>, <span class="string">system:</span> <span class="string">'solar'</span>, <span class="string">inhabited:</span> <span class="literal">true</span>, <span class="string">humans:</span> &#123; <span class="string">genders:</span> <span class="number">2</span>, <span class="string">eyes:</span> <span class="literal">true</span> &#125; &#125;</div><div class="line">&#123; <span class="string">_id:</span> <span class="string">'id3'</span>, <span class="string">planet:</span> <span class="string">'Jupiter'</span>, <span class="string">system:</span> <span class="string">'solar'</span>, <span class="string">inhabited:</span> <span class="literal">false</span> &#125;</div><div class="line">&#123; <span class="string">_id:</span> <span class="string">'id4'</span>, <span class="string">planet:</span> <span class="string">'Omicron Persei 8'</span>, <span class="string">system:</span> <span class="string">'futurama'</span>, <span class="string">inhabited:</span> <span class="literal">true</span>, <span class="string">humans:</span> &#123; <span class="string">genders:</span> <span class="number">7</span> &#125; &#125;</div><div class="line">&#123; <span class="string">_id:</span> <span class="string">'id5'</span>, <span class="string">completeData:</span> &#123; <span class="string">planets:</span> [ &#123; <span class="string">name:</span> <span class="string">'Earth'</span>, <span class="string">number:</span> <span class="number">3</span> &#125;, &#123; <span class="string">name:</span> <span class="string">'Mars'</span>, <span class="string">number:</span> <span class="number">2</span> &#125;, &#123; <span class="string">name:</span> <span class="string">'Pluton'</span>, <span class="string">number:</span> <span class="number">9</span> &#125; ] &#125; &#125;</div></pre></td></tr></table></figure>
<h3 id="查找文档-db-find-query-callback"><a href="#查找文档-db-find-query-callback" class="headerlink" title="查找文档(db.find({query},callback))"></a>查找文档(db.find({query},callback))</h3><p>在对文档进行匹配查询的时候,可以去使用($lt, $lte, $gt, $gte, $in, $nin, $ne)比较运算符,也可以去使用($or, $and, $not , $where)逻辑运算符,以及正则表达式.</p>
<p>callback(可选): 包含参数err和docs，err里是错误信息，docs是查询到的文档.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 查找所有带有solar的数据</span></div><div class="line">db.find(&#123; <span class="attr">system</span>: <span class="string">'solar'</span> &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, docs</span>) </span>&#123;</div><div class="line">  <span class="comment">// 这里的docs返回的将id1,id2,id3文档的数组</span></div><div class="line">  <span class="comment">// 如果没有查询到含有solar值的system字段,docs返回的将是一个[]</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 使用正则表达式去匹配查询含有/ar/值的planet字段文档</span></div><div class="line">db.find(&#123; <span class="attr">planet</span>: <span class="regexp">/ar/</span> &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, docs</span>) </span>&#123;</div><div class="line">  <span class="comment">// 返回的docs将是包含mars,earth值的文档</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 使用多个条件去查询</span></div><div class="line">db.find(&#123; <span class="attr">system</span>: <span class="string">'solar'</span>, <span class="attr">inhabited</span>: <span class="literal">true</span> &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, docs</span>) </span>&#123;</div><div class="line">  <span class="comment">// 这里的docs返回的将是只包含Earth值的文档</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 使用对象的匹配查找</span></div><div class="line">db.find(&#123; <span class="string">"humans.genders"</span>: <span class="number">2</span> &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, docs</span>) </span>&#123;</div><div class="line">  <span class="comment">// docs返回的将是包含Earth值的文档</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 通过数组对象去匹配查询</span></div><div class="line">db.find(&#123; <span class="string">"completeData.planets.name"</span>: <span class="string">"Mars"</span> &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, docs</span>) </span>&#123;</div><div class="line">  <span class="comment">// 这里将返回id5的文档</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line">db.find(&#123; <span class="string">"completeData.planets.name"</span>: <span class="string">"Jupiter"</span> &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, docs</span>) </span>&#123;</div><div class="line">  <span class="comment">// 返回空数组</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line">db.find(&#123; <span class="string">"completeData.planets.0.name"</span>: <span class="string">"Earth"</span> &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, docs</span>) </span>&#123;</div><div class="line">  <span class="comment">// 返回id5的文档</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 对象深度比较查询，不要与"."的使用混淆</span></div><div class="line">db.find(&#123; <span class="attr">humans</span>: &#123; <span class="attr">genders</span>: <span class="number">2</span> &#125; &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, docs</span>) </span>&#123;</div><div class="line">  <span class="comment">// 返回空, 因为 &#123; genders: 2 &#125; 不等于 &#123; genders: 2, eyes: true &#125;</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 查询匹配所有文档</span></div><div class="line">db.find(&#123;&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, docs</span>) </span>&#123;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 如果只想查找某一条文档,可以使用唯一的id来进行查询</span></div><div class="line">db.findOne(&#123; <span class="attr">_id</span>: <span class="string">'id1'</span> &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, doc</span>) </span>&#123;</div><div class="line">  <span class="comment">// 如果没有匹配的文档,返回的将是null</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="比较运算符-lt-lte-gt-gte-in-nin-ne-exists-regex"><a href="#比较运算符-lt-lte-gt-gte-in-nin-ne-exists-regex" class="headerlink" title="比较运算符($lt, $lte, $gt, $gte, $in, $nin, $ne, $exists, $regex)"></a>比较运算符($lt, $lte, $gt, $gte, $in, $nin, $ne, $exists, $regex)</h3><p>语法是 <code>{ field: { $op: value } }</code> 这里的 <code>$op</code> 是表示这里可以填写任意的运算符</p>
<ul>
<li>$lt, $lte: 小于，小于等于</li>
<li>$gt, $gte: 大于，大于等于</li>
<li>$in: 属于</li>
<li>$ne, $nin: 不等于，不属于</li>
<li>$exists: 取值为true或者false，用于检测文档是否具有某一字段</li>
<li>$regex: 检测字符串是否与正则表达式相匹配</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// $lt, $lte, $gt , $gte 只能用于数字和字符串</span></div><div class="line">db.find(&#123; <span class="string">"humans.genders"</span>: &#123; $gt: <span class="number">5</span> &#125; &#125;, <span class="function"><span class="keyword">function</span> <span class="params">(err, docs)</span> </span>&#123;</div><div class="line">  <span class="comment">// 这里doc返回将是一个humans.genders值大于5的文档</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 当使用字符串的时候,将使用字典里字母的顺序进行匹配查找</span></div><div class="line">db.find(&#123; planet: &#123; $gt: <span class="string">'Mercury'</span> &#125;&#125;, <span class="function"><span class="keyword">function</span> <span class="params">(err, docs)</span> </span>&#123;</div><div class="line">  <span class="comment">// 返回的是包含Omicron Persei 8值的文档</span></div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">// $in和$nin 的使用方式相同</span></div><div class="line">db.find(&#123; planet: &#123; $in: [<span class="string">'Earth'</span>, <span class="string">'Jupiter'</span>] &#125;&#125;, <span class="function"><span class="keyword">function</span> <span class="params">(err, docs)</span> </span>&#123;</div><div class="line">  <span class="comment">// 返回含有 Earth 和 Jupiter 值的文档</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 使用 $exists</span></div><div class="line">db.find(&#123; satellites: &#123; $exists: <span class="keyword">true</span> &#125; &#125;, <span class="function"><span class="keyword">function</span> <span class="params">(err, docs)</span> </span>&#123;</div><div class="line">  <span class="comment">// docs contains only Mars</span></div><div class="line">  <span class="comment">// 返回含有Mars值的文档</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 同时使用正则和其他匹配方式进行匹配</span></div><div class="line">db.find(&#123; planet: &#123; $regex: /ar/, $nin: [<span class="string">'Jupiter'</span>, <span class="string">'Earth'</span>] &#125; &#125;, <span class="function"><span class="keyword">function</span> <span class="params">(err, docs)</span> </span>&#123;</div><div class="line">  <span class="comment">// docs only contains Mars because Earth was excluded from the match by $nin</span></div><div class="line">  <span class="comment">// 返回结果应该只有包含Mars值的文档,因为$nin匹配方式排除了含有Earth值的文档</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="数组字段"><a href="#数组字段" class="headerlink" title="数组字段"></a>数组字段</h3><p>当你的字段在一个文档里是一个数组时,NeDB首先会尝试去看是不是一个数组,如果是的话会进行精确匹配查找,然后去判断此数组是否使用了具体的比较运算操作方法,如果没有,会对其所有元素进行查找.</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 精确匹配</span></div><div class="line"><span class="selector-tag">db</span><span class="selector-class">.find</span>(&#123; <span class="attribute">satellites</span>: [<span class="string">'Phobos'</span>, <span class="string">'Deimos'</span>] &#125;, <span class="selector-tag">function</span> (err, docs) &#123;</div><div class="line">  <span class="comment">// 返回的是含有Mars值的文档</span></div><div class="line">&#125;)</div><div class="line"><span class="selector-tag">db</span><span class="selector-class">.find</span>(&#123; <span class="attribute">satellites</span>: [<span class="string">'Deimos'</span>, <span class="string">'Phobos'</span>] &#125;, <span class="selector-tag">function</span> (err, docs) &#123;</div><div class="line">  <span class="comment">// 返回空</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>暂时还没有写完</p>
<p>此文档由本人自己翻译,如果有错误或者翻译不对的地方请留下建议,万分感谢,如有转载者请注明,并加上链接</p>
<p>此文章原文链接:<a href="http://www.taoyage.net/2016/09/29/NeDB中文文档">http://www.taoyage.net/2016/09/29/NeDB中文文档</a></p>
<p>此文档原英文文档链接:<a href="https://github.com/louischatriot/nedb#creatingloading-a-database" target="_blank" rel="external">https://github.com/louischatriot/nedb#creatingloading-a-database</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;NeDB简介&quot;&gt;&lt;a href=&quot;#NeDB简介&quot; class=&quot;headerlink&quot; title=&quot;NeDB简介&quot;&gt;&lt;/a&gt;NeDB简介&lt;/h2&gt;&lt;p&gt;NeDB是一款用于Node.js开发的NoSQL嵌入式内存数据库,完全采用javascript开发,可以使用
    
    </summary>
    
      <category term="前端开发" scheme="http://www.taoyage.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="node嵌入式数据库" scheme="http://www.taoyage.net/tags/node%E5%B5%8C%E5%85%A5%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="NEDB中文文档" scheme="http://www.taoyage.net/tags/NEDB%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3/"/>
    
      <category term="NeDB中文API" scheme="http://www.taoyage.net/tags/NeDB%E4%B8%AD%E6%96%87API/"/>
    
  </entry>
  
  <entry>
    <title>git常用命令</title>
    <link href="http://www.taoyage.net/2016/09/28/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.taoyage.net/2016/09/28/git常用命令/</id>
    <published>2016-09-28T14:41:04.000Z</published>
    <updated>2016-09-28T15:07:19.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="初始化本地git仓库"><a href="#初始化本地git仓库" class="headerlink" title="初始化本地git仓库"></a>初始化本地git仓库</h3><p><code>$ git init</code></p>
<h3 id="查看当前仓库状态"><a href="#查看当前仓库状态" class="headerlink" title="查看当前仓库状态"></a>查看当前仓库状态</h3><p><code>$ git status</code></p>
<h3 id="查看修改日志"><a href="#查看修改日志" class="headerlink" title="查看修改日志"></a>查看修改日志</h3><p><code>$ git log</code></p>
<h3 id="恢复到某个版本"><a href="#恢复到某个版本" class="headerlink" title="恢复到某个版本"></a>恢复到某个版本</h3><p><code>$ git reset --hard HEAD</code>(HEAD 指的是通过<code>$ git log</code>命令来获取的commit的后6位值)</p>
<h3 id="添加所有文件到缓存"><a href="#添加所有文件到缓存" class="headerlink" title="添加所有文件到缓存"></a>添加所有文件到缓存</h3><p><code>$ git add --all</code></p>
<h3 id="提交修改信息"><a href="#提交修改信息" class="headerlink" title="提交修改信息"></a>提交修改信息</h3><p><code>$ git commit -m &quot;修改信息&quot;</code></p>
<h3 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h3><p><code>$ git push -u origin master</code></p>
<h3 id="从远程仓库获取数据"><a href="#从远程仓库获取数据" class="headerlink" title="从远程仓库获取数据"></a>从远程仓库获取数据</h3><p><code>$ git pull origin master</code></p>
<h3 id="列出所有分支"><a href="#列出所有分支" class="headerlink" title="列出所有分支"></a>列出所有分支</h3><p><code>$ git branch</code></p>
<h3 id="创建新分支"><a href="#创建新分支" class="headerlink" title="创建新分支"></a>创建新分支</h3><p><code>$ git branch name</code></p>
<h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><p><code>$ git checkout name</code></p>
<h3 id="删除本地分支"><a href="#删除本地分支" class="headerlink" title="删除本地分支"></a>删除本地分支</h3><p><code>$ git branch -d name</code></p>
<h3 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h3><p><code>$ git push origin : name</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;初始化本地git仓库&quot;&gt;&lt;a href=&quot;#初始化本地git仓库&quot; class=&quot;headerlink&quot; title=&quot;初始化本地git仓库&quot;&gt;&lt;/a&gt;初始化本地git仓库&lt;/h3&gt;&lt;p&gt;&lt;code&gt;$ git init&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;查看
    
    </summary>
    
      <category term="前端开发工具" scheme="http://www.taoyage.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="-- git -- github" scheme="http://www.taoyage.net/tags/git-github/"/>
    
  </entry>
  
  <entry>
    <title>gulp.js-前端自动化构建工具</title>
    <link href="http://www.taoyage.net/2016/09/27/gulp/"/>
    <id>http://www.taoyage.net/2016/09/27/gulp/</id>
    <published>2016-09-27T04:27:20.000Z</published>
    <updated>2016-09-30T03:57:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文将带着你构建一个完整的gulp自动化开发环境</p>
<h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><p>gulp基于nodejs的前端自动化工具,在使用前需要先安装nodejs,这里对nodejs的安装不做详细介绍具体参考nodejs官网。</p>
<h2 id="全局安装gulp"><a href="#全局安装gulp" class="headerlink" title="全局安装gulp"></a>全局安装gulp</h2><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">npm</span> install --<span class="built_in">global</span> gulp</div></pre></td></tr></table></figure>
<h2 id="初始化你的项目目录"><a href="#初始化你的项目目录" class="headerlink" title="初始化你的项目目录"></a>初始化你的项目目录</h2><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">npm</span> init</div></pre></td></tr></table></figure>
<p>此时在你的项目根目录下将会出现一个package.json的文件,用来管理通过npm安装的模块</p>
<h2 id="安装gulp到你的项目"><a href="#安装gulp到你的项目" class="headerlink" title="安装gulp到你的项目"></a>安装gulp到你的项目</h2><figure class="highlight q"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install gulp --<span class="built_in">save</span>-<span class="built_in">dev</span></div></pre></td></tr></table></figure>
<p>查看package.json查看是否存在以下纪录,有则代表安装成功,之后在接下来所安装成功的模块都会依次出现在”devDependencies”下面</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="string">"devDependencies"</span>: &#123;</div><div class="line">  <span class="string">"gulp"</span>: <span class="string">"^3.9.1"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="在跟目录下创建gulpfile-js文件"><a href="#在跟目录下创建gulpfile-js文件" class="headerlink" title="在跟目录下创建gulpfile.js文件"></a>在跟目录下创建gulpfile.js文件</h2><p>打开gulpfile.js文件,写入以下代码,加载刚刚安装的gulp模块</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">const gulp</span> = require(<span class="string">"gulp"</span>);</div></pre></td></tr></table></figure>
<h2 id="安装gulp插件"><a href="#安装gulp插件" class="headerlink" title="安装gulp插件"></a>安装gulp插件</h2><p>gulp有很多第三方开发的插件,这些插件都可以通过</p>
<p><code>$ npm install packageName --save-dev</code> 来进行安装</p>
<p>根据项目,来安装自己所需要的插件包,这篇文章里介绍几个常用的插件来做示例</p>
<h3 id="gulp-concat"><a href="#gulp-concat" class="headerlink" title="gulp-concat"></a>gulp-concat</h3><p>gulp-concat是一个用来合并文件的插件,一般用来合并js文件较多</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm <span class="keyword">install</span> gulp-<span class="keyword">concat</span> <span class="comment">--save-dev</span></div></pre></td></tr></table></figure>
<h4 id="gulpfile-示例"><a href="#gulpfile-示例" class="headerlink" title="gulpfile 示例"></a>gulpfile 示例</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">"gulp"</span>);</div><div class="line"><span class="keyword">const</span> concat = <span class="built_in">require</span>(<span class="string">'gulp-concat'</span>);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'scripts'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'./js/*.js'</span>) <span class="comment">//指定要被合并的文件</span></div><div class="line">  .pipe(concat(<span class="string">'app.js'</span>)) <span class="comment">//将以上目录下的.js文件都合并到app.js文件中 </span></div><div class="line">  .pipe(gulp.dest(<span class="string">'./dist/'</span>)); <span class="comment">//配置app.js的输出目录</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="gulp-sass"><a href="#gulp-sass" class="headerlink" title="gulp-sass"></a>gulp-sass</h3><p>gulp-sass 自动将sass文件编译成css文件</p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install gulp-sass --<span class="built_in">save</span>-<span class="built_in">dev</span></div></pre></td></tr></table></figure>
<h4 id="gulpfile-示例-1"><a href="#gulpfile-示例-1" class="headerlink" title="gulpfile 示例"></a>gulpfile 示例</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">"gulp"</span>);</div><div class="line"><span class="keyword">const</span> sass = <span class="built_in">require</span>(<span class="string">'gulp-sass'</span>);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'sass'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'./sass/**/*.scss'</span>)</div><div class="line">    .pipe(sass().on(<span class="string">'error'</span>, sass.logError))</div><div class="line">    .pipe(gulp.dest(<span class="string">'./dest/css/'</span>));</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="gulp-watch"><a href="#gulp-watch" class="headerlink" title="gulp-watch"></a>gulp-watch</h3><p>gulp－watch 用来自动监控任务</p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install gulp-watch --<span class="built_in">save</span>-<span class="built_in">dev</span></div></pre></td></tr></table></figure>
<h4 id="gulpfile-示例-2"><a href="#gulpfile-示例-2" class="headerlink" title="gulpfile 示例"></a>gulpfile 示例</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">"gulp"</span>);</div><div class="line"><span class="keyword">const</span> watch = <span class="built_in">require</span>(<span class="string">'gulp-watch'</span>);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'watch'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	watch([<span class="string">'./js/**/*.js'</span>],<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">		gulp.start(<span class="string">'scripts'</span>);</div><div class="line">	&#125;);</div><div class="line">	watch(<span class="string">'./sass/**/*.scss'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">		gulp.start(<span class="string">'scripts'</span>);</div><div class="line">	&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="gulpfile-最终代码示例"><a href="#gulpfile-最终代码示例" class="headerlink" title="gulpfile 最终代码示例"></a>gulpfile 最终代码示例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">"gulp"</span>);</div><div class="line"><span class="keyword">const</span> concat = <span class="built_in">require</span>(<span class="string">'gulp-concat'</span>);</div><div class="line"><span class="keyword">const</span> sass = <span class="built_in">require</span>(<span class="string">'gulp-sass'</span>);</div><div class="line"><span class="keyword">const</span> watch = <span class="built_in">require</span>(<span class="string">'gulp-watch'</span>);</div><div class="line"></div><div class="line"><span class="comment">/*合并js*/</span></div><div class="line">gulp.task(<span class="string">'scripts'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="keyword">return</span> gulp.src(<span class="string">'./js/**/*.js'</span>)</div><div class="line">	.pipe(concat(<span class="string">'app.js'</span>))</div><div class="line">	.pipe(gulp.dest(<span class="string">'./dist/js/'</span>));</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">/*编译sass*/</span></div><div class="line">gulp.task(<span class="string">'sass'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="keyword">return</span> gulp.src(<span class="string">'./sass/**/*.scss'</span>)</div><div class="line">	.pipe(sass().on(<span class="string">'error'</span>, sass.logError))</div><div class="line">	.pipe(gulp.dest(<span class="string">'./dest/css/'</span>));</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">/*监控*/</span></div><div class="line">gulp.task(<span class="string">'watch'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	watch([<span class="string">'./js/**/*.js'</span>],<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">		gulp.start(<span class="string">'scripts'</span>);</div><div class="line">	&#125;);</div><div class="line">	watch(<span class="string">'./sass/**/*.scss'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">		gulp.start(<span class="string">'scripts'</span>);</div><div class="line">	&#125;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'watch'</span>]);</div></pre></td></tr></table></figure>
<p>此时只要在终端输入<code>$ gulp</code> 将自动执行以上配置好的任务<br>只要监控的文件发生改变,将会自动执行合并js任务或编译sass任务</p>
<p>更完整的gulp配置可以看：<a href="https://github.com/taoyage/gulp" target="_blank" rel="external">https://github.com/taoyage/gulp</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将带着你构建一个完整的gulp自动化开发环境&lt;/p&gt;
&lt;h2 id=&quot;安装nodejs&quot;&gt;&lt;a href=&quot;#安装nodejs&quot; class=&quot;headerlink&quot; title=&quot;安装nodejs&quot;&gt;&lt;/a&gt;安装nodejs&lt;/h2&gt;&lt;p&gt;gulp基于nodejs的前
    
    </summary>
    
      <category term="前端开发工具" scheme="http://www.taoyage.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="-- gulp -- 前端自动化工具" scheme="http://www.taoyage.net/tags/gulp-%E5%89%8D%E7%AB%AF%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>markdown基本语法</title>
    <link href="http://www.taoyage.net/2016/09/27/markdown/"/>
    <id>http://www.taoyage.net/2016/09/27/markdown/</id>
    <published>2016-09-26T16:12:54.000Z</published>
    <updated>2016-09-30T03:58:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># h1</span></div><div class="line"><span class="meta">## h2</span></div><div class="line"><span class="meta">### h3</span></div><div class="line"><span class="meta">#### h4</span></div><div class="line"><span class="meta">##### h5</span></div><div class="line"><span class="meta">###### h6</span></div></pre></td></tr></table></figure>
<h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-<span class="ruby"> 文本<span class="number">1</span></span></div><div class="line">-<span class="ruby"> 文本<span class="number">2</span></span></div><div class="line">-<span class="ruby"> 文本<span class="number">3</span></span></div></pre></td></tr></table></figure>
<p>显示效果如下</p>
<ul>
<li>文本1</li>
<li>文本2</li>
<li>文本3</li>
</ul>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span> 文本<span class="number">1</span></div><div class="line"><span class="number">2.</span> 文本<span class="number">2</span></div><div class="line"><span class="number">3.</span> 文本<span class="number">3</span></div></pre></td></tr></table></figure>
<p>显示效果如下</p>
<ol>
<li>文本1</li>
<li>文本2</li>
<li>文本3</li>
</ol>
<h2 id="代码引用"><a href="#代码引用" class="headerlink" title="代码引用"></a>代码引用</h2><p>代码上下分别用三个`来包裹</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">var a</span> = 1;</div><div class="line"><span class="attribute">var b</span> = 1;</div><div class="line"><span class="attribute">var c</span> = 1;</div></pre></td></tr></table></figure>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[github首页](https://github.com/taoyage)</div></pre></td></tr></table></figure>
<p>效果如下<br><a href="https://github.com/taoyage" target="_blank" rel="external">github首页</a></p>
<h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![](http:<span class="regexp">//</span>b.zol-img.com.cn<span class="regexp">/desk/</span>bizhi<span class="regexp">/image/</span><span class="number">4</span><span class="regexp">/960x600/</span><span class="number">1395022832519</span>.jpg)</div></pre></td></tr></table></figure>
<p>效果如下</p>
<p><img src="http://b.zol-img.com.cn/desk/bizhi/image/4/960x600/1395022832519.jpg" alt="Alt text"></p>
<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="bullet">- </span>- -</div></pre></td></tr></table></figure>
<p>效果如下</p>
<p>分割线上</p>
<hr>
<p>分割线下</p>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="params">| col1 |</span> col2 <span class="params">| col3 |</span></div><div class="line"><span class="params">|:----:|</span><span class="symbol">:----</span><span class="symbol">:|</span><span class="symbol">:----</span><span class="symbol">:|</span></div><div class="line"><span class="params">|  1   |</span>   <span class="number">2</span>  <span class="params">|   3  |</span></div><div class="line"><span class="params">|  1   |</span>   <span class="number">2</span>  <span class="params">|   3  |</span></div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>col1</th>
<th>col2</th>
<th>col3</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>2</td>
<td>3</td>
</tr>
<tr>
<td>1</td>
<td>2</td>
<td>3</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div cl
    
    </summary>
    
      <category term="前端开发工具" scheme="http://www.taoyage.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="markdown语法" scheme="http://www.taoyage.net/tags/markdown%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.taoyage.net/2016/09/24/hello-world/"/>
    <id>http://www.taoyage.net/2016/09/24/hello-world/</id>
    <published>2016-09-24T10:53:20.000Z</published>
    <updated>2016-09-27T04:52:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
      <category term="aaaa" scheme="http://www.taoyage.net/categories/aaaa/"/>
    
    
      <category term="aaa" scheme="http://www.taoyage.net/tags/aaa/"/>
    
  </entry>
  
</feed>
